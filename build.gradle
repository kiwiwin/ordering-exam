buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.hidetake:gradle-ssh-plugin:0.3.10'
    }
}

apply plugin: 'ssh'

remotes {
    vagrant {
        host = '192.168.89.89'
        user = 'vagrant'

        identity = file("${System.properties['user.home']}/.vagrant.d/insecure_private_key")
    }
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'application'

repositories {
    mavenCentral()
}

ext {
    jerseyVersion = '2.10.1'
    mockitoVersion = '1.9.5'
    junitVersion = '4.11'
    jacksonVersion = "1.9.13"
}


dependencies {
    compile 'javax.ws.rs:javax.ws.rs-api:2.0'

    compile "cglib:cglib:3.1"

    compile "org.glassfish.jersey.core:jersey-server:$jerseyVersion"
    compile "org.glassfish.jersey.containers:jersey-container-grizzly2-http:$jerseyVersion"
    compile "org.glassfish.jersey.containers:jersey-container-servlet:$jerseyVersion"

    compile "org.glassfish.jersey.media:jersey-media-moxy:$jerseyVersion"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion"

    testCompile "org.glassfish.jersey.test-framework:jersey-test-framework-core:$jerseyVersion"
    testCompile "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:$jerseyVersion"

    compile "org.mongodb:mongo-java-driver:2.12.2"

    testCompile "org.mockito:mockito-all:$mockitoVersion"
    testCompile "junit:junit:$junitVersion"
}

task execute(type: JavaExec) {
    main = "org.kiwi.App"
    classpath = sourceSets.main.runtimeClasspath
}

task uberjar(type: Jar, dependsOn: jar) {
    classifier = "standalone"

    from files(sourceSets.main.output.classesDir)
    from files(sourceSets.main.output.resourcesDir)

    from configurations.runtime.asFileTree.files.collect { zipTree(it) }

    exclude("META-INF/*.SF")
    exclude("META-INF/*.DSA")
    exclude("META-INF/*.RSA")

    manifest {
        attributes 'Main-Class': "org.kiwi.App"
    }
}


task checkServer(type: SshTask) {
    session(remotes.vagrant) {
        execute 'ifconfig'
    }
}



task deploy(type: SshTask, dependsOn: uberjar) {
    session(remotes.vagrant) {
        put uberjar.archivePath.absolutePath, '/home/vagrant'

        executeBackground('nohup java -jar /home/vagrant/ordering-exam-standalone.jar 1>/dev/null 2>&1 < /dev/null &')
    }
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

